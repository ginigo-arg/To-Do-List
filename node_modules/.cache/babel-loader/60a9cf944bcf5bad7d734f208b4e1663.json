{"ast":null,"code":"var _jsxFileName = \"E:\\\\APPS WEBS\\\\To-Do-List\\\\src\\\\Components\\\\TaskList.jsx\";\nimport React from 'react';\nimport CheckBox from './CheckBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TaskList = props => {\n  const {\n    list,\n    setList\n  } = props;\n\n  const onChangeStatus = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    const updateList = list.map(item => ({ ...item,\n      done: item.id === name ? checked : item.done\n    }));\n    setList(updateList);\n  };\n\n  const check = list.map(item => /*#__PURE__*/_jsxDEV(CheckBox, {\n    data: item,\n    onChange: onChangeStatus\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this));\n\n  const onClickRemoveItem = e => {\n    const updateList = list.filter(item => !item.done);\n    setList(updateList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"TaskList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [list.length ? check : \"No hay lista\", list.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClickRemoveItem,\n          children: \"Delete All One\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["E:/APPS WEBS/To-Do-List/src/Components/TaskList.jsx"],"names":["React","CheckBox","TaskList","props","list","setList","onChangeStatus","e","name","checked","target","updateList","map","item","done","id","check","onClickRemoveItem","filter","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBF,KAAxB;;AAEA,QAAMG,cAAc,GAAGC,CAAC,IAAI;AAC1B,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAkBF,CAAC,CAACG,MAA1B;AACA,UAAMC,UAAU,GAAGP,IAAI,CAACQ,GAAL,CAASC,IAAI,KAAK,EACnC,GAAGA,IADgC;AAEnCC,MAAAA,IAAI,EAAED,IAAI,CAACE,EAAL,KAAYP,IAAZ,GAAmBC,OAAnB,GAA6BI,IAAI,CAACC;AAFL,KAAL,CAAb,CAAnB;AAIAT,IAAAA,OAAO,CAACM,UAAD,CAAP;AACD,GAPD;;AASA,QAAMK,KAAK,GAAGZ,IAAI,CAACQ,GAAL,CAASC,IAAI,iBAEzB,QAAC,QAAD;AAAwB,IAAA,IAAI,EAAEA,IAA9B;AAAoC,IAAA,QAAQ,EAAEP;AAA9C,KAAeO,IAAI,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA,UAFY,CAAd;;AAMA,QAAME,iBAAiB,GAAGV,CAAC,IAAI;AAC7B,UAAMI,UAAU,GAAGP,IAAI,CAACc,MAAL,CAAYL,IAAI,IAAI,CAACA,IAAI,CAACC,IAA1B,CAAnB;AACAT,IAAAA,OAAO,CAACM,UAAD,CAAP;AACD,GAHD;;AAKA,sBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,iBACGP,IAAI,CAACe,MAAL,GAAcH,KAAd,GAAsB,cADzB,EAEGZ,IAAI,CAACe,MAAL,gBACC;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAEF,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,GAIE,IANL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADF;AAcD,CArCD;;KAAMf,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import React from 'react'\r\nimport CheckBox from './CheckBox'\r\n\r\nconst TaskList = (props) => {\r\n  const {list, setList} = props\r\n  \r\n  const onChangeStatus = e => {\r\n    const {name, checked} = e.target\r\n    const updateList = list.map(item => ({\r\n      ...item,\r\n      done: item.id === name ? checked : item.done\r\n    }))\r\n    setList(updateList)\r\n  }\r\n  \r\n  const check = list.map(item => (\r\n\r\n    <CheckBox key={item.id} data={item} onChange={onChangeStatus}/>\r\n    \r\n  ))\r\n\r\n  const onClickRemoveItem = e => {\r\n    const updateList = list.filter(item => !item.done);\r\n    setList(updateList);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div>TaskList</div>\r\n    <div>\r\n      {list.length ? check : \"No hay lista\"}\r\n      {list.length ? (\r\n        <p>\r\n          <button onClick={onClickRemoveItem}>Delete All One</button>\r\n        </p>\r\n      ): null}\r\n    </div>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default TaskList"]},"metadata":{},"sourceType":"module"}